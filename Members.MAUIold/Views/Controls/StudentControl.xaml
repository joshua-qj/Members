<?xml version="1.0" encoding="utf-8" ?>
<ContentView xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
              xmlns:m="clr-namespace:Members.CoreBusiness;assembly=Members.CoreBusiness"
             x:Class="Members.MAUI.Views.Controls.StudentControl"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:vm="clr-namespace:Members.MAUI.ViewModels"
             x:DataType="vm:StudentViewModel">
    <VerticalStackLayout Spacing="10" Margin="20,20,20,0">

        <Frame Padding="10,2,10,2">
            <HorizontalStackLayout>
                <Label Text="First Name" VerticalOptions="Center" WidthRequest="70"></Label>
                <Entry  VerticalOptions="Center" Text="{Binding Student.FirstName}">
                    <Entry.Behaviors>
                        <toolkit:TextValidationBehavior
                    x:Name="firstNameValidator"
                    Flags="ValidateOnAttaching,ValidateOnValueChanged"
                                       MinimumLength="1"
                          IsValid="{Binding IsNameProvided}"
                          />
                    </Entry.Behaviors>
                </Entry>
            </HorizontalStackLayout>
        </Frame>
        <Frame Padding="10,2,10,2">
            <HorizontalStackLayout>
                <Label Text="Last Name" VerticalOptions="Center" WidthRequest="70"></Label>
                <Entry  VerticalOptions="Center" Text="{Binding Student.LastName}">
                    <Entry.Behaviors>
                        <toolkit:TextValidationBehavior
                    x:Name="lastNameValidator"
                    Flags="ValidateOnAttaching,ValidateOnValueChanged"
                                       MinimumLength="1"
                          IsValid="{Binding IsNameProvided}"
                          />
                    </Entry.Behaviors>
                </Entry>
            </HorizontalStackLayout>
        </Frame>

        <Frame Padding="10,2,10,2">
            <HorizontalStackLayout>
                <Label Text="Phone" VerticalOptions="Center" WidthRequest="70"></Label>
                <Entry  VerticalOptions="Center" Text="{Binding Student.PhoneNumber}"></Entry>
            </HorizontalStackLayout>
        </Frame>

        <Frame Padding="10,2,10,2">
            <HorizontalStackLayout>
                <Label Text="Email" VerticalOptions="Center" WidthRequest="70"></Label>
                <Entry  VerticalOptions="Center" Text="{Binding Student.Email}">
                    <Entry.Behaviors>
                        <toolkit:MultiValidationBehavior
            x:Name="emailValidator"
                Flags="ValidateOnAttaching,ValidateOnValueChanged">
                            <toolkit:TextValidationBehavior
                                         Flags="ValidateOnAttaching,ValidateOnValueChanged"
                   MinimumLength="1"
                                      IsValid="{Binding IsEmailProvided}"
                    toolkit:MultiValidationBehavior.Error="Email is required."
                   />

                            <toolkit:EmailValidationBehavior
                                         Flags="ValidateOnAttaching,ValidateOnValueChanged"
                                     toolkit:MultiValidationBehavior.Error="Email format is invalid."
                                      IsValid="{Binding IsEmailFormatValid}"
                   />
                        </toolkit:MultiValidationBehavior>
                    </Entry.Behaviors>
                </Entry>
            </HorizontalStackLayout>
        </Frame>
        
        <Frame Padding="10,2,10,2">
            <HorizontalStackLayout>
                <Label Text="Team" VerticalOptions="Center" WidthRequest="60"></Label>
                <Picker ItemsSource="{Binding Teams}" SelectedItem="{Binding SelectedTeam}" 
                        ItemDisplayBinding="{Binding Name}" Title="Selece a team" />
                <Entry Text="{Binding SelectedTeam.Name}" Placeholder="Team name" />
      
            </HorizontalStackLayout>
        </Frame>

        <!--Compare to Non MVVM control, no need click event, and names of every Text, because it is binded to a view model-->
        <Button x:Name="btnSave" Text="Save" Command="{Binding EditStudentCommand}" ></Button>
        <Button x:Name="btnCancel" Text="Cancel" Command="{Binding BackToStudentsCommand}"></Button>

    </VerticalStackLayout>

</ContentView>
